List and meaning of common bash scripting commands

NAVIGATION

ls - list directory contents
pwd - print name of current/working directory
cd - change working directory
pushd/popd - put working directory on a stack
file - determine file type
locate - find files by name
updatedb - update database for locate
which - locate a command
history - display bash command history

GETTING HELP

whatis - display the on-line manual descriptions
apropos - search the manual page names and descriptions
man - an interface to the on-line reference manuals

WORKING WITH FILES

mkdir - create a directory/make directories
touch - change file timestamps/create empty files
cp - copy files and directories
mv - move (rename) files
rm - remove files or directories
rmdir - remove empty directories

TEXT FILES

cat - concatenate files and print on the standard output
more/less - file perusal filter for crt viewing
nano - command line text editor

USERS

sudo - execute a command as superuser
su - change user ID or become another user
users - print the user names of users currently logged in
id - print real and effective user and group IDs

CHANGING FILE PERMISSIONS

chmod - change permissions of a file

KILLING PROGRAMS AND LOGGING OUT

Ctrl+C - kill a running command
killall - kill processes by name
exit - log out of bash

USEFUL SHORTCUTS

Ctrl+D - signal bash that there is no more input
Ctrl+L - redraw the screen
Ctrl++ - make text bigger in terminal emulator
Ctrl+- - make text smaller in terminal emulator


To make changes to a created file
-touch hello.sh //creates a shell script called hello.sh
-echo 'hello bash' > hello.sh  //adds the content hello bash to the file hello.sh
-./hello.sh   //   ./ runs the specified shell script
- echo 'hello from the other side' > hello2.sh  //This creates a new file called hello2.sh and writes the content 'hello from the other side to it
